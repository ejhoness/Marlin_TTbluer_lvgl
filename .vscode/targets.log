make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri May 20 21:55:10 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /home/user/.nvm/versions/node/v14.4.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# environment
PLATFORMIO_IDE = 2.4.3
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/user/Downloads/TwoTreesBluer/gitmarlinttbluer/Marlin_TTbluer_lvgl
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/97
# environment
VSCODE_NLS_CONFIG = {"locale":"pt-br","availableLanguages":{"*":"pt-br"},"_languagePackId":"74ce6549a467d1dfaba55fb5394742c9.pt-br","_translationsConfigFile":"/home/user/.config/Code/clp/74ce6549a467d1dfaba55fb5394742c9.pt-br/tcf.json","_cacheRoot":"/home/user/.config/Code/clp/74ce6549a467d1dfaba55fb5394742c9.pt-br","_resolvedLanguagePackCoreLocation":"/home/user/.config/Code/clp/74ce6549a467d1dfaba55fb5394742c9.pt-br/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5","_corruptedFile":"/home/user/.config/Code/clp/74ce6549a467d1dfaba55fb5394742c9.pt-br/corrupted.info","_languagePackSupport":true}
# environment
JOURNAL_STREAM = 8:49907
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# environment
QT_IM_MODULE = ibus
# environment
USERNAME = user
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/home/user/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
_ = /snap/code/97/usr/share/code/code
# environment
MANAGERPID = 1450
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/user
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/97/usr/share/glib-2.0/schemas
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
NO_PROXY = 127.0.0.1
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/user-desktop:@/tmp/.ICE-unix/1829,unix/user-desktop:/tmp/.ICE-unix/1829
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GDK_PIXBUF_MODULE_FILE = /home/user/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/97
# environment
NVM_BIN = /home/user/.nvm/versions/node/v14.4.0/bin
# environment
SNAP_VERSION = c3511e6c
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = c256b1b809cc4f5c9bc5163074caf5be
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/97/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 22899
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/user/Downloads/TwoTreesBluer/gitmarlinttbluer/Marlin_TTbluer_lvgl
# default
.LOADED := 
# environment
SSH_AGENT_PID = 1737
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/user
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/user/.config/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = user
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = _04ykRUEPXBpCTht62LJYkAUDERkC3dm4VMkW2Glw6P7u3YpU09d
# environment
NVM_CD_FLAGS = 
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/user/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/user
# environment
PLATFORMIO_PATH = /home/user/.platformio/penv/bin:/home/user/.platformio/penv:/home/user/.platformio/python3/bin:/home/user/.local/bin:/home/user/.nvm/versions/node/v14.4.0/bin:/home/user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
PATH = /home/user/.local/bin:/home/user/.nvm/versions/node/v14.4.0/bin:/home/user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# environment
SNAP_USER_DATA = /home/user/snap/code/97
# environment
SHLVL = 0
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-104bbf10-52fa-4c53-98bc-56c4de641656.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = user
# environment
SNAP_REVISION = 97
# makefile
.DEFAULT_GOAL := help
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = pt_BR:pt:en
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-16068fa4-1.67.2-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/user/.nvm
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# environment
QT_ACCESSIBILITY = 1
# default
MAKEFILES := 
# environment
SNAP_COOKIE = _04ykRUEPXBpCTht62LJYkAUDERkC3dm4VMkW2Glw6P7u3YpU09d
# automatic
<F = $(notdir $<)
# environment
PLATFORMIO_CALLER = vscode
# environment
SNAP_NAME = code
# environment
LC_ALL = C
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
VSCODE_PID = 22951
# variable set hash-table stats:
# Load=129/1024=13%, Rehash=0, Collisions=20/154=13%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66307, inode 3081051): 21 files, no impossibilities.

# 21 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

 
tests-single-ci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	export GIT_RESET_HARD=true
	$(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET)

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: help tests-single-ci tests-single-local tests-single-local-docker tests-all-local tests-all-local-docker setup-local-docker
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tests-single-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 29):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local" ; return 1; fi
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && run_tests . $(TEST_TARGET) "$(ONLY_TEST)"

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-17 18:47:11
#  File has been updated.
#  Successfully updated.

tests-all-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && for TEST_TARGET in $$(./get_test_targets.py) ; do echo "Running tests for $$TEST_TARGET" ; run_tests . $$TEST_TARGET ; done

setup-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	docker-compose build

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2):
	@echo "Tasks for local development:"
	@echo "* tests-single-ci:             Run a single test from inside the CI"
	@echo "* tests-single-local:          Run a single test locally"
	@echo "* tests-single-local-docker:   Run a single test locally, using docker-compose"
	@echo "* tests-all-local:             Run all tests locally"
	@echo "* tests-all-local-docker:      Run all tests locally, using docker-compose"
	@echo "* setup-local-docker:          Setup local docker-compose"
	@echo ""
	@echo "Options for testing:"
	@echo "  TEST_TARGET          Set when running tests-single-*, to select the"
	@echo "                       test. If you set it to ALL it will run all "
	@echo "                       tests, but some of them are broken: use "
	@echo "                       tests-all-* instead to run only the ones that "
	@echo "                       run on GitHub CI"
	@echo "  ONLY_TEST            Limit tests to only those that contain this, or"
	@echo "                       the index of the test (1-based)"
	@echo "  VERBOSE_PLATFORMIO   If you want the full PIO output, set any value"
	@echo "  GIT_RESET_HARD       Used by CI: reset all local changes. WARNING:"
	@echo "                       THIS WILL UNDO ANY CHANGES YOU'VE MADE!"

tests-single-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local-docker" ; return 1; fi
	docker-compose run --rm marlin $(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET) VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD) ONLY_TEST="$(ONLY_TEST)"

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tests-all-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	docker-compose run --rm marlin $(MAKE) tests-all-local VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD)

# files hash-table stats:
# Load=12/1024=1%, Rehash=0, Collisions=0/35=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 34 / storage = 378 B / avg = 11 B
# current buf: size = 8162 B / used = 378 B / count = 34 / avg = 11 B

# strcache performance: lookups = 65 / hit rate = 47%
# hash-table stats:
# Load=34/8192=0%, Rehash=0, Collisions=1/65=2%
# Finished Make data base on Fri May 20 21:55:10 2022

 
